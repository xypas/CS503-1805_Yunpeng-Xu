{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nconst routes: Routes = [\n \t{\n \t\tpath: '',\n \t\tredirectTo: 'problems',\n \t\tpathMatch: 'full'// excatly match\n \t},\n \t{\n \t\tpath: 'problems',\n \t\tcomponent: ProblemListComponent\n \t},\n \t{\n \t\tpath: 'problems/:id', // :id is parameter e.g. problems/1 (id=1)\n \t\tcomponent: ProblemDetailComponent\n \t},\n \t{\t\n \t\tpath:'**', // any other routes redirect to 'problems'\n \t\tredirectTo: 'problems'\n \t}\n]\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"@media screen {\\n#editor {\\n height: 600px;\\n }\\n .lang-select {\\n width: 100px;\\n margin-right: 10px;\\n }\\n header .btn {\\n margin: 0 5px;\\n }\\n footer .btn {\\n margin: 0 5px;\\n }\\n .editor-footer, .editor-header {\\n margin: 10px 0;\\n }\\n .cursor {\\n /*position:absolute;*/\\n background: rgba(0, 250, 0, 0.5);\\n z-index: 40;\\n width: 2px!important\\n }\\n }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0b3IvZWRpdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtDQUNDLGNBQWM7RUFDYjtDQUNEO0NBQ0EsYUFBYTtDQUNiLG1CQUFtQjtFQUNsQjtDQUNEO0NBQ0EsY0FBYztFQUNiO0NBQ0Q7Q0FDQSxjQUFjO0VBQ2I7Q0FDRDtDQUNBLGVBQWU7RUFDZDtDQUNEO0NBQ0Esc0JBQXNCO0NBQ3RCLGlDQUFpQztDQUNqQyxZQUFZO0NBQ1osb0JBQW9CO0VBQ25CO0VBQ0EiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2VkaXRvci9lZGl0b3IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSBzY3JlZW4ge1xuI2VkaXRvciB7XG4gaGVpZ2h0OiA2MDBweDtcbiB9XG4gLmxhbmctc2VsZWN0IHtcbiB3aWR0aDogMTAwcHg7XG4gbWFyZ2luLXJpZ2h0OiAxMHB4O1xuIH1cbiBoZWFkZXIgLmJ0biB7XG4gbWFyZ2luOiAwIDVweDtcbiB9XG4gZm9vdGVyIC5idG4ge1xuIG1hcmdpbjogMCA1cHg7XG4gfVxuIC5lZGl0b3ItZm9vdGVyLCAuZWRpdG9yLWhlYWRlciB7XG4gbWFyZ2luOiAxMHB4IDA7XG4gfVxuIC5jdXJzb3Ige1xuIC8qcG9zaXRpb246YWJzb2x1dGU7Ki9cbiBiYWNrZ3JvdW5kOiByZ2JhKDAsIDI1MCwgMCwgMC41KTtcbiB6LWluZGV4OiA0MDtcbiB3aWR0aDogMnB4IWltcG9ydGFudFxuIH1cbiB9XG4iXX0= */\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <div class=\\\"row\\\"> \\n      <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n        [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n      </select>\\n      <!--reset button -->\\n      <!-- Button trigger modal -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n        Reset\\n      </button>\\n\\n      <!-- Modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              You will lose current code in the editor, are you sure?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n              (click)=\\\"resetEditor()\\\">Reset</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <div id=\\\"editor\\\">\\n  </div><!-- This is the body -->\\n  \\n  <footer class=\\\"editor-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" \\n      (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { CollaborationService } from '../../services/collaboration.service';\ndeclare var ace: any; // we must declare ace, since the ace is not\n//wroten by typescript, use type any.\n@Component({\n\tselector: 'app-editor',\n\ttemplateUrl: './editor.component.html',\n\tstyleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\teditor: any;\n\tsessionId: string;\n\tpublic languages: string[] = ['Java','Python'];\n\tlanguage: string = 'Java';\n\n\tdefaultContent = {\n\t\t'Java': `public class Solution{\n\t\t\tpublic static void main(String[] args){\n\t\t\t\t//Type your Java code here\n\t\t\t}\n\t\t}\n\t\t`,\n\t\t'Python':`class Solution:\n\t\tdef example():\n\t\t#write your python code here \n\t\t`\n\t}; //use `` to write multi-line text\n\n\tconstructor(private collaboration: CollaborationService,\n\t\tprivate route: ActivatedRoute) { }\n\n\tngOnInit() {\n\t\tthis.route.params\n\t\t.subscribe(params => {\n\t\t\tthis.sessionId = params['id'];\n\t\t\tthis.initEditor();\n\t\t});\n\t}\n\tinitEditor(): void{\n\t\t// \"editor\" is the id in html\n\t\tthis.editor = ace.edit(\"editor\");\n\t\tthis.editor.setTheme(\"ace/theme/eclipse\");\n\t\tthis.resetEditor();\n\n\t\tdocument.getElementsByTagName('textarea')[0].focus();\n\t\t//set up collaboration socket\n\n\t\tthis.collaboration.init(this.editor, this.sessionId); //sessionId: No. of problem\n\t\tthis.editor.lastAppliedChange = null; // new has no change\n\t\t// register change callback\n\t\tthis.editor.on('change', (e) => {\n\t\t\tconsole.log('editor changes: '+ JSON.stringify(e))\n\t\t\t//if the change is initiated from the current browser session\n\t\t\t//then send to the server\n\t\t\tif (this.editor.lastAppliedChange != e){\n\t\t\t\tthis.collaboration.change(JSON.stringify(e)); //avoid forced change \n\t\t\t}\n\t\t}) \n\t}\n\tresetEditor(): void{\n\t\tthis.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());\n\t\t// set the java\n \t\tthis.editor.setValue(this.defaultContent[this.language]);\n\t}\n\tsetLanguage(language: string): void{\n\t\tthis.language = language;\n\t\tthis.resetEditor();\n\t}\n\n\tsubmit():void{\n\t\tlet usercode = this.editor.getValue();\n\t\tconsole.log(usercode);\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmV3LXByb2JsZW0vbmV3LXByb2JsZW0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n\\t<form #formRef=\\\"ngForm\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemName\\\">Problem Name</label>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n\\t\\t\\tname=\\\"problemName\\\" placeholder=\\\"Please input problem name\\\" required\\n\\t\\t\\t[(ngModel)]=\\\"newProblem.name\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemDesc\\\">Problem Description</label>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n\\t\\t\\tname=\\\"problemDesc\\\" placeholder=\\\"Please input description\\\" required\\n\\t\\t\\t[(ngModel)]=\\\"newProblem.desc\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"difficulty\\\">Difficulty</label>\\n\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n\\t\\t\\t[(ngModel)]=\\\"newProblem.difficulty\\\">\\n\\t\\t\\t<option *ngFor=\\\"let difficulty of difficulties\\\"\\n\\t\\t\\t[value]=\\\"difficulty\\\">\\n\\t\\t\\t{{difficulty}}\\n\\t\\t</option>\\n\\t</select>\\n</div>\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-12\\\">\\n\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n\\t\\t(click)=\\\"addProblem()\\\">Add problem</button>\\n\\t</div>\\n</div>\\n</form>\\n</div>\\n<br/>\\n<br/>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n//default problem\nconst DEAFAULT_PROBLEM: Problem = Object.freeze({\n\tid: 0,\n\tname: '',\n\tdesc: '',\n\tdifficulty: 'easy' \n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n// create a shadow copy of problem and assign it to newProblem\n// Object.assign() copies property values. If the source value is areference to an object, it only copies that reference value.\nnewProblem: Problem = Object.assign({}, DEAFAULT_PROBLEM);\ndifficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n  constructor(private dataService: DataService) { }\n \n  ngOnInit() {\n  }\n  addProblem(){\n  \tthis.dataService.addProblem(this.newProblem);\n  \tthis.newProblem = Object.assign({}, DEAFAULT_PROBLEM);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvYmxlbS1kZXRhaWwvcHJvYmxlbS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- problem-detail.component.html -->\\n<!-- *ngIf: only show the problem when problem is not null-->\\n<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-sm-12 col-md-4\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<h2>\\n\\t\\t\\t\\t\\t{{problem.id}}. {{problem.name}}\\n\\t\\t\\t\\t</h2>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t{{problem.desc}}\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n\\t\\t\\t<app-editor></app-editor>\\n\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\tproblem: Problem;\n  constructor(private dataService: DataService,\n  \t\t\t  private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  \t// subscribe: when params changes, this.problem will be updated\n    // +: convert string to int\n    this.route.params.subscribe(params => { \n    \tthis.dataService.getProblem(+params['id'])\n      .then(problem => this.problem = problem);//+ means transfer string to integer\n    });\n  }\n\n}\n","module.exports = \".difficult {\\n min-width: 65px;\\n margin-right: 18px;\\n}\\n.badge.difficulty {\\n padding-top: 0.6em;\\n color: #fbfdfa;\\n font-size: 12px;\\n}\\n.title {\\n font-size: 1.2em;\\n}\\n.diff-easy {\\n background-color: #42ebf4;\\n}\\n.diff-medium {\\n background-color: #92cf5c;\\n}\\n.diff-hard {\\n background-color: #dd0d1e;\\n}\\n.diff-super{\\n background-color: #8d16e2;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxnQkFBZ0I7Q0FDaEIsbUJBQW1CO0NBQ25CO0FBQ0Q7Q0FDQyxtQkFBbUI7Q0FDbkIsZUFBZTtDQUNmLGdCQUFnQjtDQUNoQjtBQUNEO0NBQ0MsaUJBQWlCO0NBQ2pCO0FBQ0Q7Q0FDQywwQkFBMEI7Q0FDMUI7QUFDRDtDQUNDLDBCQUEwQjtDQUMxQjtBQUNEO0NBQ0MsMEJBQTBCO0NBQzFCO0FBQ0Q7Q0FDQywwQkFBMEI7Q0FDMUIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Byb2JsZW0tbGlzdC9wcm9ibGVtLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kaWZmaWN1bHQge1xuIG1pbi13aWR0aDogNjVweDtcbiBtYXJnaW4tcmlnaHQ6IDE4cHg7XG59XG4uYmFkZ2UuZGlmZmljdWx0eSB7XG4gcGFkZGluZy10b3A6IDAuNmVtO1xuIGNvbG9yOiAjZmJmZGZhO1xuIGZvbnQtc2l6ZTogMTJweDtcbn1cbi50aXRsZSB7XG4gZm9udC1zaXplOiAxLjJlbTtcbn1cbi5kaWZmLWVhc3kge1xuIGJhY2tncm91bmQtY29sb3I6ICM0MmViZjQ7XG59XG4uZGlmZi1tZWRpdW0ge1xuIGJhY2tncm91bmQtY29sb3I6ICM5MmNmNWM7XG59XG4uZGlmZi1oYXJkIHtcbiBiYWNrZ3JvdW5kLWNvbG9yOiAjZGQwZDFlO1xufVxuLmRpZmYtc3VwZXJ7XG4gYmFja2dyb3VuZC1jb2xvcjogIzhkMTZlMjtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-new-problem></app-new-problem>\\n\\t<div class=\\\"list-group\\\">\\n\\t\\t<a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\"\\n\\t\\t[routerLink]=\\\"['/problems', problem.id]\\\">\\n\\t\\t\\t\\n\\t\\t\\t<span \\n\\t\\t\\tclass=\\\"{{'pull-left badge difficulty diff-' + \\n\\t\\t\\tproblem.difficulty.toLocaleLowerCase()}}\\\">\\n\\t\\t\\t\\t{{problem.difficulty}}\\n\\t\\t\\t</span>\\n\\t\\t\\t<strong class=\\\"title\\\">{{problem.id}}.{{problem.name}}\\t\\n\\t\\t  \\t</strong>\\t\\n\\t\\t</a>\\n\\t</div>\\n</div>\\n\\n\\t\\t\\t\\n\\t\\t\\t\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n/*\nconst PROBLEMS: Problem[] = [\n  {\n    \"id\":1,\n    \"name\":\"Two Sum\",\n    \"desc\":\"Given an array of integers, find two numbers such that they add up to a specific target number.\\n\\nThe function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are NOT zero-based.\",\n    \"difficulty\":\"easy\"\n  },\n  {\n    \"id\":2,\n    \"name\":\"3Sum\",\n    \"desc\":\"Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\",\n    \"difficulty\":\"medium\"\n  },\n  {\n    \"id\":3,\n    \"name\":\"4Sum\",\n    \"desc\":\"Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target?\\n\\nFind all unique quadruplets in the array which gives the sum of target.\",\n    \"difficulty\":\"medium\"\n  },\n  {\n    \"id\":4,\n    \"name\":\"Triangle Count\",\n    \"desc\":\"Given an array of integers, how many three numbers can be found in the array, so that we can build an triangle whose three edges length is the three numbers that we find?\",\n    \"difficulty\":\"hard\"},\n  {\n    \"id\":5,\n    \"name\":\"Sliding Window Maximum\",\n    \"desc\":\"Given an array of n integer with duplicate number, and a moving window(size k), move the window at each iteration from the start of the array, find the maximum number inside the window at each moving.\",\n    \"difficulty\":\"super\"\n  }\n];\n*/\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit, OnDestroy {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n    //this.problems = this.dataService.getProblems();\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => this.problems = problems);\n  }\n\n}","import { Injectable } from '@angular/core';\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n\tcollaborationSocket: any;\n\n  constructor() { }\n\n  init(editor: any, sessionId: string): void { \n  \t// establish socket connection\n  \tthis.collaborationSocket = io(window.location.origin, { query: 'sessionId=' + sessionId})\n  \t\n  \t//when receive change from the server, apply to local browser session\n  \tthis.collaborationSocket.on('change', (delta: string) => {\n  \t\tconsole.log('collaboration: editor changes ' + delta);\n  \t\tdelta = JSON.parse(delta);//transfer string to object\n  \t\teditor.lastAppliedChange = delta;\n  \t\teditor.getSession().getDocument().applyDeltas([delta]); //ace-editor API provides these methods\n  \t\t\n  \t});\n  }\n  // send to server (which will forward to other participants)\n  change(delta: string): void {\n  \tconsole.log('send message' + delta);\n  \tthis.collaborationSocket.emit('change', delta); \n  }\n }\n\n","import { Injectable } from '@angular/core';\n// import { Problem } from '../models/problem.model';\n// import { PROBLEMS } from '../mock-problems';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Problem } from '../models/problem.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\t//problems: Problem[] = PROBLEMS;\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n\n  // getProblems(): Problem[] {\n  // \treturn this.problems;\n  // }\n\n  // getProblem(id: number): Problem {\n  // \treturn this.problems.find( (problem) => problem.id === id);\n  // }\n\n  // addProblem(problem: Problem) {\n  // \tproblem.id = this.problems.length + 1;\n  // \tthis.problems.push(problem);\n  // }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n\n     return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}